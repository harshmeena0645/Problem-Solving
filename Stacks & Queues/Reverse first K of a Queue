Reverse first K of a Queue

If size of queue smaller then k return Original Queue

Input: q = [1, 2, 3, 4, 5], k = 3
Output: [3, 2, 1, 4, 5]

Input: q = [4, 3, 2, 1], k = 4
Output: [1, 2, 3, 4]


from collections import deque
class Solution:
    def reverseFirstK(self, q, k):
        n = len(q)
        if k > n:
            return q
        stack = []

        for _ in range(k):
            stack.append(q.popleft())
        while stack:
            q.append(stack.pop())
        for _ in range(n - k):
            q.append(q.popleft())

        return q
