Infix to Postfix

Order of precedence : ^ , * , / , + , -

Input: s = "a+b*(c^d-e)^(f+g*h)-i"
Output: abcd^e-fgh*+^*+i-

Input: s = "A*(B+C)/D"
Output: ABC+*D/

Input: s = "(a+b)*(c+d)"
Output: ab+cd+*


class Solution:
    def InfixtoPostfix(self, s):
        def precedence(op):
            if op == '^':
                return 3
            elif op in ('*', '/'):
                return 2
            elif op in ('+', '-'):
                return 1
            else:
                return 0
        
        stack = []
        postfix = ''
        
        for ch in s:
            if ch.isalnum():
                postfix += ch
            elif ch == '(':
                stack.append(ch)
            elif ch == ')':
                while stack and stack[-1] != '(':
                    postfix += stack.pop()
                stack.pop()
            else:
                while (stack and precedence(stack[-1]) >= precedence(ch)):
                    postfix += stack.pop()
                stack.append(ch)
        
        while stack:
            postfix += stack.pop()
        
        return postfix
