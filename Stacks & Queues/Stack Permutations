Stack Permutations

Check if  array b[] is a stack permutation of the array a[] or not. 
Stack permutation means that array b[] can be created from array a[] using a stack and stack operations.


a[] = [1, 2, 3], b[] = [2 ,1 ,3]
Output: True
Explanation:
1. push 1 from a to stack
2. push 2 from a to stack
3. pop 2 from stack to b
4. pop 1 from stack to b
5. push 3 from a to stack
6. pop 3 from stack to b

a[] = [1, 2, 3], b[] = [3 ,1 ,2]
Output: False
Explanation:Not Possible



class Solution:
    def checkPerm(self, a, b):
        stack = []
        j = 0  # Pointer for b[]
        for x in a:
            stack.append(x)
            while stack and stack[-1] == b[j]:
                stack.pop()
                j += 1

        return len(stack) == 0
