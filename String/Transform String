Transform String

Given two strings A and B. Find the minimum number of steps required to transform string A into string B. The only allowed operation for the transformation is selecting a character from string A and inserting it in the beginning of string A.

Example 1:

Input:
A = "abd"
B = "bad"
Output: 1
Explanation: The conversion can take place in
1 operation: Pick 'b' and place it at the front.
Example 2:

Input:
A = "GeeksForGeeks"
B = "ForGeeksGeeks"
Output: 3
Explanation: The conversion can take
place in 3 operations:
Pick 'r' and place it at the front.
A = "rGeeksFoGeeks"
Pick 'o' and place it at the front.
A = "orGeeksFGeeks"
Pick 'F' and place it at the front.
A = "ForGeeksGeeks"
Your Task: 
You dont need to read input or print anything. Complete the function transform() which takes two strings A and B as input parameters and returns the minimum number of steps required to transform A into B. If transformation is not possible return -1.


class Solution:
    def transform(self, A, B): 
        if len(A) != len(B):
            return -1
        
        m = {}
        n = len(A)
        for i in range(n):
            if A[i] in m:   
                m[A[i]] += 1 
            else:
                m[A[i]] = 1
                
        for i in range(n):
            if B[i] in m:
                m[B[i]] -= 1
        
        for key in m:
            if m[key] != 0:  
                return -1   
        
        i, j = n-1, n-1
        res = 0
        while i >= 0 and j >= 0:
            while i >= 0 and A[i] != B[j]:
                res += 1  #
                i -= 1  
            i -= 1
            j -= 1
        
        return res 
