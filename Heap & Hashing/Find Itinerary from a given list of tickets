Find Itinerary from a given list of tickets

Given a list of tickets, find the itinerary in order using the given list.

Note: It may be assumed that the input list of tickets is not cyclic and there is one ticket from every city except the final destination.

Examples:

Input: "Chennai" -> "Bangalore"
            "Bombay" -> "Delhi"
             "Goa"    -> "Chennai"
             "Delhi"  -> "Goa"
Output: Bombay->Delhi, Delhi->Goa, Goa->Chennai, Chennai->Bangalore

Input: "New York" -> "Chicago"
            "Denver" -> "San Francisco"
            "Chicago" -> "Denver"
            "San Francisco" -> "Los Angeles"
Output: New York -> Chicago, Chicago -> Denver, Denver -> San Francisco, San Francisco -> Los Angeles

Using HashMap - O(n) Time and O(n) Space


def findItinerary(arr):
    
    dataSet = {}
    for i in arr:
        dataSet[i[0]] = i[1]

    reverseMap = {}
    for i in arr:
        reverseMap[i[1]] = i[0]

    # Find the starting point of itinerary
    start = ""

    for i in range(len(arr)):
        if arr[i][0] not in reverseMap:
            start = arr[i][0]
            break

    ans = []

    # Once we have starting point, we simple need to go next,
    # next of next using given hash map
    while start in dataSet:
        ans.append([start, dataSet[start]])
        start = dataSet[start]

    return ans


if __name__ == "__main__":
    arr = [["Chennai", "Bangalore"], ["Bombay", "Delhi"], 
           ["Goa", "Chennai"], ["Delhi", "Goa"]]

    res = findItinerary(arr)
    for i in res:
        print(i[0], "->", i[1])
