Ceil in a Sorted Array

Return index (0-based) of the smallest number greater than k.
If element not exist, return -1.
If multiple occurrences of ceil y then return index of the first occurrence.

arr[] = [1, 2, 8, 10, 11, 12, 19], x = 5
Output: 2
Explanation: Smallest number greater than 5 is 8, whose index is 2.

arr[] = [1, 2, 8, 10, 11, 12, 19], x = 20
Output: -1

arr[] = [1, 1, 2, 8, 10, 11, 12, 19], x = 0
Output: 0


class Solution:
    def findCeil(self, arr, x):
        low = 0
        high = len(arr) - 1
        res = -1
        while low <= high:
            mid = (low + high) // 2
            if arr[mid] >= x:
                res = mid
                high = mid - 1
            else:
                low = mid + 1
        
        return res

