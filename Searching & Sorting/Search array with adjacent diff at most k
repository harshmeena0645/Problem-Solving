Search array with adjacent diff at most k

find the index of key x in the arr[].
If multiple occurrences of key x exist, return the first occurrence of the key.
If no occurrence of key x exists return -1.

Note: A step array is an array of integers where the difference between adjacent elements is at most k.

arr[] = [4, 5, 6, 7, 6] , k = 1 , x = 6
Output: 2
Explanation: In an array arr 6 is present at index 2. So, return 2.

arr[] = [20, 40, 50], k = 20 , x = 70
Output: -1 
Explaination: As there is no occurrence of 70. So, return -1.



class Solution:
    def findStepKeyIndex(self, arr, k, x):
        i = 0
        n = len(arr)
        while i < n:
            if arr[i] == x:
                return i
            i += max(1, abs(arr[i] - x) // k)
        
        return -1


Time Complexity: O(n)
Auxiliary Space: O(1)
