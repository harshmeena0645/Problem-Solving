Majority Element

Find majority element
If no majority element exists, return -1
A majority element is arr.size()/2 times

arr[] = [1, 1, 2, 1, 3, 5, 1]
Output: 1
Explanation: Since, 1 is present more than 1/2 times, so it is the majority element.

arr[] = [7]
Output: 7
Explanation: Since, 7 is single element and present more than 1/2 times, so it is the majority element.

arr[] = [2, 13]
Output: -1
Explanation: Since, no element is present more than 2/2 times, so there is no majority element.



class Solution:
    def majorityElement(self, arr):
        count = 0
        candidate = None

        for num in arr:
            if count == 0:
                candidate = num
                count = 1
            elif num == candidate:
                count += 1
            else:
                count -= 1

        if arr.count(candidate) > len(arr) // 2:
            return candidate
        else:
            return -1
