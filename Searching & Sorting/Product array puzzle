Product array puzzle

Given an array, arr[] construct a product array, res[] where each element in res[i] is the product of all elements in arr[] except arr[i]. Return this resultant array, res[].
Note: Each element is res[] lies inside the 32-bit integer range.

Examples:

Input: arr[] = [10, 3, 5, 6, 2]
Output: [180, 600, 360, 300, 900]
Explanation: For i=0, res[i] = 3 * 5 * 6 * 2 is 180.
For i = 1, res[i] = 10 * 5 * 6 * 2 is 600.
For i = 2, res[i] = 10 * 3 * 6 * 2 is 360.
For i = 3, res[i] = 10 * 3 * 5 * 2 is 300.
For i = 4, res[i] = 10 * 3 * 5 * 6 is 900.
Input: arr[] = [12, 0]
Output: [0, 12]
Explanation: For i = 0, res[i] is 0.
For i = 1, res[i] is 12.


# User function Template for python3

class Solution:
    def productExceptSelf(self, arr):
        n = len(arr)
        if n == 0:
            return []

        left = [1] * n
        right = [1] * n
        res = [1] * n

        # Construct left array
        for i in range(1, n):
            left[i] = arr[i - 1] * left[i - 1]

        # Construct right array
        for i in range(n - 2, -1, -1):
            right[i] = arr[i + 1] * right[i + 1]

        # Multiply left and right for the result
        for i in range(n):
            res[i] = left[i] * right[i]

        return res
