Trapping Rain Water
#Two Pointer

h = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6

h = [4,2,0,3,2,5]
Output: 9



class Solution(object):
    def trap(self, h):
        if not h or len(h) < 3:
            return 0

        l, r = 0, len(h) - 1
        left, right = h[l], h[r]
        trapped = 0

        while l < r:
            if left < right:
                l += 1
                left = max(left, h[l])
                trapped += max(0, left - h[l])
            else:
                r -= 1
                right = max(right, h[r])
                trapped += max(0, right - h[r])
        return trapped


Complexity
Time complexity: O(n)
Space complexity: O(1)
