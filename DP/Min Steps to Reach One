Min Steps to Reach One

You are given a positive integer 'N'. You have to reduce it to "1".
(i). Reduce it to N-1. (N ==> N-1)
(ii). If it is divisble by 2, then divide it by 2. (N ==> N/2)
(iii). If it is divisble by 3, then divide it by 3. (N ==> N/3)

Input:
N=16
Output: 4 (16>8>4> 2 -> 1)


def min_steps_to_one(n):
    dp = [0] * (n + 1)

    for i in range(2, n + 1):
        dp[i] = dp[i - 1] + 1
        if i % 2 == 0:
            dp[i] = min(dp[i], dp[i // 2] + 1)
        if i % 3 == 0:
            dp[i] = min(dp[i], dp[i // 3] + 1)

    return dp[n]

n = int(input("Enter n: "))
print("Minimum steps to reduce to 1:", min_steps_to_one(n))


Time Complexity - O(n)
ASC - O(n)
