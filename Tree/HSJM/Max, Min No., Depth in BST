class Node:
    def __init__(self,data):
        self.data=data
        self.left=None
        self.right=None

def find_min(root):
    if root is None:
        return float('inf')
    return min(root.data,find_min(root.left),find_min(root.right))

def find_max(root):
    if root is None:
        return float('-inf')
    return max(root.data,find_max(root.left),find_max(root.right))
        
def depth(root):
    if root is None:
        return 0
    return 1 + max(depth(root.left),depth(root.right))
    
def create_BST(values):
    if not values:
        return None
    root=None
    for v in values:
        if v is not None:
            root=insert_values(root,v)
    return root

def insert_values(root,v):
    if root is None:
        return Node(v)
    if v < root.data:
        root.left=insert_values(root.left,v)
    elif v > root.data:
        root.right=insert_values(root.right,v)
    return root

values=[2, 1, "null", 3, "null", 5]
values=[None if v=="null" else v for v in values]
root=create_BST(values)
print("Minimum by BST :",find_min(root))
print("Maximum by BST :",find_max(root))
print("Depth of BST:",depth(root))
