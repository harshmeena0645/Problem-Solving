Search a node in BST

Present: 1
Not Present: 0

Input:         2
                \
                 81 
               /    \ 
             42      87 
              \       \ 
               66      90 
              / 
            45
X = 87
Output: 1


Input:      6
             \ 
              8 
             / \ 
            7   9
X = 11
Output: 0


Time Complexity: O(Height of the BST)
Auxiliary Space: O(1)




class BST:
    def search(self, node, x):
        if node is None:
            return False
        if node.data == x:
            return True
        elif x < node.data:
            return self.search(node.left, x)
        else:
            return self.search(node.right, x)
