Quick Sort on Linked List

You are given a Linked List. Sort the given Linked List using quicksort. 

Examples:

Input: Linked list: 1->6->2
Output: 1->2->6

Explanation:
After sorting the nodes, we have 1, 2 and 6.
Input: Linked list: 1->9->3->8
Output: 1->3->8->9

Explanation:
After sorting the nodes, we have 1, 3, 8 and 9. 


def quickSort(head):


    if not head or not head.next:
        return head

    # 1. Partition the list
    pivot = head
    less_head, equal_head, greater_head = partition(head)

    # 2. Recursively sort the sublists
    less_head = quickSort(less_head)
    greater_head = quickSort(greater_head)

    # 3. Concatenate the sorted sublists
    if less_head:
        # Find the tail of the less list
        less_tail = less_head
        while less_tail.next:
            less_tail = less_tail.next
        less_tail.next = equal_head
    else:
        less_head = equal_head

    # Find the tail of the equal list
    equal_tail = equal_head
    while equal_tail.next:
        equal_tail = equal_tail.next
    equal_tail.next = greater_head

    return less_head


def partition(head):
    """
    Partitions the linked list around the pivot (head).

    Args:
        head: The head of the linked list (pivot).

    Returns:
        A tuple containing the heads of the less, equal, and greater lists.
    """

    pivot = head.data
    less_head = None
    equal_head = head
    greater_head = None

    less_tail = None
    equal_tail = head
    greater_tail = None

    curr = head.next
    equal_tail.next = None # Important: Disconnect pivot from the rest of the list

    while curr:
        next_node = curr.next

        if curr.data < pivot:
            if not less_head:
                less_head = curr
                less_tail = curr
            else:
                less_tail.next = curr
                less_tail = curr
            less_tail.next = None # Terminate the less list
        elif curr.data == pivot:
            equal_tail.next = curr
            equal_tail = curr
            equal_tail.next = None # Terminate the equal list
        else:
            if not greater_head:
                greater_head = curr
                greater_tail = curr
            else:
                greater_tail.next = curr
                greater_tail = curr
            greater_tail.next = None # Terminate the greater list

        curr = next_node

    return less_head, equal_head, greater_head
