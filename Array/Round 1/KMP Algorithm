Search Pattern (KMP-Algorithm)
Difficulty: HardAccuracy: 45.04%Submissions: 120K+Points: 8
Given two strings, one is a text string txt and the other is a pattern string pat. 
The task is to print the indexes of all the occurrences of the pattern string in the text string. 
Use 0-based indexing while returning the indices.
Note: Return an empty list in case of no occurrences of pattern.


Input: txt = "abcab", pat = "ab"
Output: [0, 3]
Explanation: The string "ab" occurs twice in txt, one starts at index 0 and the other at index 3. 
Input: txt = "abesdu", pat = "edu"
Output: []
Explanation: There's no substring "edu" present in txt.
Input: txt = "aabaacaadaabaaba", pat = "aaba"
Output: [0, 9, 12]


class Solution:
    def search(self, pat, txt):
        def compute_lps(pattern):
            lps = [0] * len(pattern)
            length = 0  # Length of the previous longest prefix suffix
            i = 1
            
            while i < len(pattern):
                if pattern[i] == pattern[length]:
                    length += 1
                    lps[i] = length
                    i += 1
                else:
                    if length != 0:
                        length = lps[length - 1]
                    else:
                        lps[i] = 0
                        i += 1
            return lps
        
        # Step 1: Compute the LPS array
        lps = compute_lps(pat)
        result = []
        i = 0  # Index for txt
        j = 0  # Index for pat
        
        # Step 2: Search the pattern
        while i < len(txt):
            if pat[j] == txt[i]:
                i += 1
                j += 1
            
            if j == len(pat):  # Pattern found
                result.append(i - j)  # Append the start index
                j = lps[j - 1]  # Reset j using the LPS array
            
            elif i < len(txt) and pat[j] != txt[i]:  # Mismatch after j matches
                if j != 0:
                    j = lps[j - 1]
                else:
                    i += 1
        
        return result
