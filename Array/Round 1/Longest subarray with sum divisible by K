Longest subarray with sum divisible by K

arr[] = [2, 7, 6, 1, 4, 5], k = 3
Output: 4
Subarray [7,6,1,4]--> sum = 18,divisible by 3

arr[] = [-2, 2, -5, 12, -11, -1, 7], k = 3
Output: 5
[2,-5,12,-11,-1]--> sum= -3,divisible by 3.

arr[] = [1, 2, -2], k = 2
Output: 2
[2, -2] has sum = 0,divisible by 2.


class Solution:
    def longestSubarrayDivK(self, arr, k):
        index = {}
        prefix_sum = 0
        max_len = 0
        
        for i, num in enumerate(arr):
            prefix_sum += num
            rem = prefix_sum % k
            
            if rem == 0:
                max_len = max(max_len, i+1)
            
            if rem in index:
                length = i - index[rem]
                if length > max_len:
                    max_len = length
            else:
                index[rem] = i
        
        return max_len


