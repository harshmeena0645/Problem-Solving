Minimum Rounds to Complete All Tasks

You're given a list of tasks, where each number represents a type of task.

Each round must consist of either:
2 tasks of the same type.
3 tasks of the same type.


Your goal:
Complete all tasks using the minimum number of rounds.
If it's not possible, return -1.

Input: tasks = [2,2,3,3,2,4,4,4,4,4]
Output: 4

Input: tasks = [2,3,3]
Output: -1




from collections import Counter

def minimumRounds(tasks):
    task_counts = Counter(tasks)
    total_rounds = 0

    for count in task_counts.values():
        if count == 1:
            return -1
        rounds = (count + 2) // 3
        total_rounds += rounds

    return total_rounds
