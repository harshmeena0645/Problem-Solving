Kth Largest Element in an Array
# Quickselect optimal Approch


nums = [3,2,1,5,6,4], k = 2
Output: 5

nums = [3,2,3,1,2,4,5,5,6], k = 4
Output: 4


def quickselect(nums, k):
    k = len(nums) - k

    def partition(left, right):
        pivot = nums[right]
        p_index = left
        for i in range(left, right):
            if nums[i] <= pivot:
                nums[i], nums[p_index] = nums[p_index], nums[i]
                p_index += 1
        nums[p_index], nums[right] = nums[right], nums[p_index]
        return p_index

    left, right = 0, len(nums) - 1
    while left <= right:
        pivot_index = partition(left, right)
        if pivot_index == k:
            return nums[pivot_index]
        elif pivot_index < k:
            left = pivot_index + 1
        else:
            right = pivot_index - 1

nums1 = list(map(int,input().split()))
k1 = int(input())
print(quickselect(nums1, k1))


Complexity:-
Time: O(n)
Space: O(1)

