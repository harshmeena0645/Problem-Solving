Search in Rotated Sorted Array
 

nums = [4,5,6,7,0,1,2], target = 0
Output: 4

nums = [4,5,6,7,0,1,2], target = 3
Output: -1

nums = [1], target = 0
Output: -1


class Solution:
    def search(self, nums, target):
        low, high = 0, len(nums) - 1

        while low <= high:
            mid = (low + high) // 2

            if nums[mid] == target:
                return mid

            if nums[low] <= nums[mid]:
                if nums[low] <= target < nums[mid]:
                    high = mid - 1
                else:
                    low = mid + 1

            else:
                if nums[mid] < target <= nums[high]:
                    low = mid + 1
                else:
                    high = mid - 1

        return -1


✅ Time Complexity: O(log n)
✅ Space Complexity: O(1)
