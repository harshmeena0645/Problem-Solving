Find Minimum in Rotated Sorted Array


O(log n) time

nums = [3,4,5,1,2]
Output: 1
Explanation: The original array was [1,2,3,4,5] rotated 3 times.

nums = [4,5,6,7,0,1,2]
Output: 0

nums = [11,13,15,17]
Output: 11
Explanation: The original array was [11,13,15,17] and it was rotated 4 times. 


class Solution:
    def findMin(self, nums):
        low, high = 0, len(nums) - 1
        
        while low < high:
            mid = (low + high) // 2
            if nums[mid] > nums[high]:
                low = mid + 1
            else:
                high = mid
        
        return nums[low]
