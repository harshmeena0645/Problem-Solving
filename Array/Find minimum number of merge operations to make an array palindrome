minimum number of merge operations to make palindrome

"merging" (of two adjacent elements)and replace with their sum

arr[] = {15, 4, 15}
Output : 0
Array is already a palinrome 

arr[] = {1, 4, 5, 1}
Output : 1
merging 4 and 5 to make 9

arr[] = {11, 14, 15, 99}
Output : 3
merge all elements to make palindrome



def findMinOps(arr, n):
    ans = 0
    i,j = 0,n-1
    while i<=j:
        if arr[i] == arr[j]:
            i += 1
            j -= 1

        elif arr[i] > arr[j]:
            j -= 1
            arr[j] += arr[j+1] 
            ans += 1

        else:
            i += 1
            arr[i] += arr[i-1]
            ans += 1
    return ans

arr = [1, 4, 5, 9, 1]
n = len(arr)
print("Count of minimum operations is " + str(findMinOps(arr, n)))

Output
Count of minimum operations is 1

Time Complexity: O(n)
Auxiliary Space: O(1)

 
