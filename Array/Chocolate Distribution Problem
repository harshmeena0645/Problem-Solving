Chocolate Distribution Problem

arr is chocolate count in each packet
m students
Each student gets exactly one packet.
find diff in max or min which is minimized

arr = [3, 4, 1, 9, 56, 7, 9, 12], m = 5
Output: 6
sort array = arr = [1, 3, 4, 7, 9, 9, 12, 56]
Select any m consecutive subarray
[1,3,4,7,9] →diff = 9 - 1 = 8
[3,4,7,9,9] →diff = 9 - 3 = 6 ✅ (minimum)
[4,7,9,9,12] →diff = 12 - 4 = 8
[7,9,9,12,56] →diff = 56 - 7 = 49
➡️ Answer = 6

arr = [7, 3, 2, 4, 9, 12, 56], m = 3
Output: 2

Input: arr = [3, 4, 1, 9, 56], m = 5
Output: 55


class Solution:
    def findMinDiff(self, arr, M):
        arr.sort()
        min_diff = float('inf')
        for i in range(len(arr) - M + 1):
            cur = arr[i + M - 1] - arr[i]
            if cur < min_diff:
                min_diff = cur
        return min_diff


⏱️ Time Complexity: O(n log n)
