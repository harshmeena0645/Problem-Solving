Replace O's with X's

Replace all 'O' or a group of 'O' with 'X' that are surrounded by 'X'.

A 'O' (or a set of 'O') is considered to be surrounded by 'X' if there are 'X' at locations just below, just above, just left and just right of it.

mat = 
[['X', 'X', 'X', 'X'], 
['X', 'O', 'X', 'X'], 
['X', 'O', 'O', 'X'], 
['X', 'O', 'X', 'X'], 
['X', 'X', 'O', 'O']]
Output: 
[['X', 'X', 'X', 'X'], 
['X', 'X', 'X', 'X'], 
['X', 'X', 'X', 'X'], 
['X', 'X', 'X', 'X'], 
['X', 'X', 'O', 'O']]
Explanation: We only changed those 'O' that are surrounded by 'X'

mat = 
[['X', 'O', 'X', 'X'], 
['X', 'O', 'X', 'X'], 
['X', 'O', 'O', 'X'], 
['X', 'O', 'X', 'X'], 
['X', 'X', 'O', 'O']]
Output: 
[['X', 'O', 'X', 'X'], 
['X', 'O', 'X', 'X'], 
['X', 'O', 'O', 'X'], 
['X', 'O', 'X', 'X'], 
['X', 'X', 'O', 'O']]
Explanation: There's no 'O' that's surround by 'X'.

mat = 
[['X', 'X', 'X'], 
['X', 'O', 'X'], 
['X', 'X', 'X']]
Output: 
[['X', 'X', 'X'], 
['X', 'X', 'X'], 
['X', 'X', 'X']]
Explanation: There's only one 'O' that's surround by 'X'.


class Solution:
    def fill(self, mat):
        if not mat:
            return

        rows, cols = len(mat), len(mat[0])

        def dfs(r, c):
            if r < 0 or c < 0 or r >= rows or c >= cols or mat[r][c] != 'O':
                return
            mat[r][c] = 'T'  # Temporarily mark as not to be flipped
            dfs(r + 1, c)
            dfs(r - 1, c)
            dfs(r, c + 1)
            dfs(r, c - 1)

        # Step 1: Traverse border and mark connected 'O's
        for i in range(rows):
            if mat[i][0] == 'O':
                dfs(i, 0)
            if mat[i][cols - 1] == 'O':
                dfs(i, cols - 1)

        for j in range(cols):
            if mat[0][j] == 'O':
                dfs(0, j)
            if mat[rows - 1][j] == 'O':
                dfs(rows - 1, j)

        # Step 2: Flip surrounded 'O's to 'X', and 'T's back to 'O'
        for i in range(rows):
            for j in range(cols):
                if mat[i][j] == 'O':
                    mat[i][j] = 'X'
                elif mat[i][j] == 'T':
                    mat[i][j] = 'O'

        return mat
