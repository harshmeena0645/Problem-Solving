Find the number of islands

'W's (Water)
'L's (Land)
Find no. of Island

Note: An island is either surrounded by water or the boundary of a grid and is formed by connecting adjacent lands horizontally or vertically or diagonally i.e., in all 8 directions.

grid[][] = [['L', 'L', 'W', 'W', 'W'],
            ['W', 'L', 'W', 'W', 'L'],
            ['L', 'W', 'W', 'L', 'L'],
            ['W', 'W', 'W', 'W', 'W'],
            ['L', 'W', 'L', 'L', 'W']]
Output: 4

grid[][] = 
[['W', 'L', 'L', 'L', 'W', 'W', 'W'],
 ['W', 'W', 'L', 'L', 'W', 'L', 'W']]
Output: 2



class Solution:
    def numIslands(self, grid):
        rows = len(grid)
        cols = len(grid[0])

        def dfs(i, j):   
            if i < 0 or j < 0 or i >= rows or j >= cols or grid[i][j] == 0:
                return
            grid[i][j] = 0

            dfs(i - 1, j)  
            dfs(i + 1, j)  
            dfs(i, j - 1)  
            dfs(i, j + 1)  
            dfs(i - 1, j - 1) 
            dfs(i - 1, j + 1) 
            dfs(i + 1, j - 1)  
            dfs(i + 1, j + 1) 
        
        island_count = 0
        for i in range(rows):
            for j in range(cols):
                if grid[i][j] == 1:
                    dfs(i, j) 
                    island_count += 1
        
        return island_count
