Combinational Sum 1

Given an array of positive integers arr[] and an integer x, The task is to find all unique combinations in arr[] where the sum is equal to x.
The same repeated number may be chosen from arr[] an unlimited number of times. Elements in a combination (a1, a2, …, ak) must be printed in non-descending order. (ie, a1 <= a2 <= … <= ak). If there is no combination possible print “Empty”.

Input Format
First line array size
Second line array elements
Third line target value

Output Format
Pairs in different lines
Sample Input 0

4
2 3 6 7
7
Sample Output 0
2 2 3
7

Sample Input 1
3
2 3 5
8
Sample Output 1
2 2 2 2
2 3 3
3 5


def find_combinations(arr, target, start, path, result):
    if target == 0:
        result.append(path[:])
        return
    for i in range(start, len(arr)):
        if arr[i] > target:
            break
        path.append(arr[i])
        find_combinations(arr, target - arr[i], i, path, result)
        path.pop()

def combination_sum(arr, target):
    arr.sort()
    result = []
    find_combinations(arr, target, 0, [], result)
    
    if not result:
        print("Empty")
    else:
        for comb in result:
            print(*comb)

n = int(input())
arr = list(map(int, input().split()))
target = int(input())

combination_sum(arr, target)
