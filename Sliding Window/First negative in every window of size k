First negative in every window of size k


find the first negative number in every window of size k.
If there is no negative number in that window, return 0.


arr[] = [-8, 2, 3, -6, 10] ,k = 2
Output: [-8, 0, -6, -6]

arr[] = [12, -1, -7, 8, -15, 30, 16, 28] ,k=3
Output: [-1, -1, -7, -15, -15, 0] 

arr[] = [12, 1, 3, 5] ,k = 3
Output: [0, 0]

class Solution:
    def firstNegInt(self, arr, k): 
        n = len(arr)
        result = []
        negative = []
        i = 0  

        for j in range(n):
            if arr[j] < 0:
                negative.append(arr[j])
    
            if j - i + 1 == k:
                if negative:
                    result.append(negative[0])
                else:
                    result.append(0)
    
                if negative and arr[i] == negative[0]:
                    negative.pop(0)
                i += 1
    
        return result

Time Complexity: O(n)
Space Complexity: O(k)
