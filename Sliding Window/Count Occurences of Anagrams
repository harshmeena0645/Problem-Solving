Count Occurences of Anagrams

txt = "forxxorfxdofr", pat = "for"
Output: 3
Explanation: for, orf and ofr appears in the txt, hence answer is 3.

txt = "aabaabaa", pat = "aaba"
Output: 4



class Solution:
    def search(self, pat, txt):
        k = len(pat)
        n = len(txt)
        if k > n:
            return 0
        result = 0
        
        def build_map(s):
            d = {}
            for ch in s:
                if ch in d:
                    d[ch] += 1
                else:
                    d[ch] = 1
            return d

        pat_map = build_map(pat)
        freq_map = build_map(txt[:k])

        # Compare first window
        if freq_map == pat_map:
            result += 1

        # Slide the window
        for i in range(k, n):
            new = txt[i]
            old = txt[i - k]

            # Add new
            if new in freq_map:
                freq_map[new] += 1
            else:
                freq_map[new] = 1

            # Remove old
            freq_map[old] -= 1
            if freq_map[old] == 0:
                del freq_map[old]

            if freq_map == pat_map:
                result += 1

        return result
