Minimum Window Substring

s = "ADOBECODEBANC", t = "ABC"
Output: "BANC"
Explanation: "BANC" includes 'A', 'B', 'C'

s = "a", t = "a"
Output: "a"

s = "a", t = "aa"
Output: ""



class Solution:
    def minWindow(self, s, t):
        if not t or not s:
            return ""
        
        need = {}
        for char in t:
            need[char] = need.get(char, 0) + 1
        
        missing = len(t)
        start, end = 0, 0
        i = 0
        
        for j in range(1, len(s) + 1):
            char = s[j - 1]
            if char in need and need[char] > 0:
                missing -= 1
            need[char] = need.get(char, 0) - 1
            
            if missing == 0:
                while i < j and need.get(s[i], 0) < 0:
                    need[s[i]] += 1
                    i += 1                                
                
                need[s[i]] += 1                    
                missing += 1                         
                
                if end == 0 or j - i < end - start:
                    start, end = i, j
                i += 1
        
        return s[start:end]
