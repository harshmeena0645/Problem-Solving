Minimum cost for acquiring all coins with k extra coins allowed with every coin

You are given a list of N coins of different denominations. You can pay an amount equivalent to any 1 coin and can acquire that coin. In addition, once you have paid for a coin, we can choose at most K more coins and can acquire those for free. The task is to find the minimum amount required to acquire all the N coins for a given value of K.

Examples : 

Input : coin[] = {100, 20, 50, 10, 2, 5}, 
        k = 3
Output : 7

Input : coin[] = {1, 2, 5, 10, 20, 50}, 
        k = 3
Output : 3



# Python3 program to
# acquire all n coins 

import math

# function to calculate min cost
def minCost(coin, n, k): 

    # sort the coins value
    coin.sort()

    # calculate no. of
    # coins needed
    coins_needed = math.ceil(1.0 * n //
                            (k + 1));

    # calculate sum of all
    # selected coins
    ans = 0
    for i in range(coins_needed - 1 + 1): 
        ans += coin[i]
    
    return ans

# Driver code
coin = [8, 5, 3, 10, 
        2, 1, 15, 25]
n = len(coin)
k = 3

print(minCost(coin, n, k))

# This code is contributed
# by Anant Agarwal.



Output : 

3
Time Complexity: O(n log n)

Auxiliary Space: O(1)
