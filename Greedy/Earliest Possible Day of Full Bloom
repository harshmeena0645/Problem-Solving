Earliest Possible Day of Full Bloom

count start from 0
Input: plantTime = [1,4,3], growTime = [2,3,1]
Output: 9
Explanation: The grayed out pots represent planting days, colored pots represent growing days, and the flower represents the day it blooms.
One optimal way is:
On day 0, plant the 0th seed. The seed grows for 2 full days and blooms on day 3.
On days 1, 2, 3, and 4, plant the 1st seed. The seed grows for 3 full days and blooms on day 8.
On days 5, 6, and 7, plant the 2nd seed. The seed grows for 1 full day and blooms on day 9.
Thus, on day 9, all the seeds are blooming.

Input: plantTime = [1,2,3,2], growTime = [2,1,2,1]
Output: 9

Input: plantTime = [1], growTime = [1]
Output: 2


class Solution(object):
    def earliestFullBloom(self, plantTime, growTime):
        data = list(zip(plantTime, growTime))
        data.sort(key=lambda x: -x[1])
        
        res = 0
        start_time = 0
        for plant, grow in data:
            start_time += plant
            res = max(res, start_time + grow)
        return res
