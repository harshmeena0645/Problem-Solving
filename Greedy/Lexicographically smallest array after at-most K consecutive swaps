Lexicographically smallest array after at-most K consecutive swaps

Find the lexicographically smallest array that can be obtained after performing at maximum of k consecutive swaps. 

Input: arr[] = {7, 6, 9, 2, 1}  k = 3
Output: arr[] = {2, 7, 6, 9, 1}
Explanation: Array is: 7, 6, 9, 2, 1
Swap 1:   7, 6, 2, 9, 1
Swap 2:   7, 2, 6, 9, 1
Swap 3:   2, 7, 6, 9, 1
So Our final array after k = 3 swaps : 
2, 7, 6, 9, 1

Input: arr[] = {7, 6, 9, 2, 1}  k = 1
Output: arr[] = {6, 7, 9, 2, 1}


def minimizeWithKSwaps(arr, n, k):
    for i in range(n-1):
        pos = i
        for j in range(i+1, n):
            if (j-i > k):
                break
            if (arr[j] < arr[pos]):
                pos = j

        for j in range(pos, i, -1):
            arr[j],arr[j-1] = arr[j-1], arr[j]
        k -= pos - i


n, k = 5, 3
arr = [7, 6, 9, 2, 1]
minimizeWithKSwaps(arr, n, k)
for i in range(n):
    print(arr[i], end = " ")

 

Time complexity: O(N2) 
Auxiliary space: O(1)
