Smallest number

Given two integers s and d. The task is to find the smallest number such that the sum of its digits is s and the number of digits in the number are d. Return a string that is the smallest possible number. If it is not possible then return -1.

Examples:

Input: s = 9, d = 2
Output: 18 
Explanation: 18 is the smallest number possible with the sum of digits = 9 and total digits = 2.
Input: s = 20, d = 3 
Output: 299 
Explanation: 299 is the smallest number possible with the sum of digits = 20 and total digits = 3.
Expected Time Complexity: O(d)
Expected Auxiliary Space: O(1)



class Solution:
    def smallestNumber(self, s, d):
        if s == 0:
            return "0" if d == 1 else "-1"
        if s > 9 * d:
            return "-1"

        result = [0] * d
        s -= 1 

        for i in range(d - 1, 0, -1):
            if s >= 9:
                result[i] = 9
                s -= 9
            else:
                result[i] = s
                s = 0

        result[0] = s + 1 

        return ''.join(str(digit) for digit in result)
